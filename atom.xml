<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.nxw.name</id>
    <title>Xavier&apos;s Blog</title>
    <updated>2020-01-04T01:11:39.175Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.nxw.name"/>
    <link rel="self" href="https://www.nxw.name/atom.xml"/>
    <subtitle>About code, about life, about everything.</subtitle>
    <logo>https://www.nxw.name/images/avatar.png</logo>
    <icon>https://www.nxw.name/favicon.ico</icon>
    <rights>All rights reserved 2020, Xavier&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[Swift Usage]]></title>
        <id>https://www.nxw.name/post/swift-usage</id>
        <link href="https://www.nxw.name/post/swift-usage">
        </link>
        <updated>2020-01-03T08:48:49.000Z</updated>
        <summary type="html"><![CDATA[<p>This article is for recording the process which I tried a lot of ways to learn swift, an language released by Apple in 2014, and sharing references unofficial which are more suitable for those who are new. Hopefully this post will help you.</p>
]]></summary>
        <content type="html"><![CDATA[<p>This article is for recording the process which I tried a lot of ways to learn swift, an language released by Apple in 2014, and sharing references unofficial which are more suitable for those who are new. Hopefully this post will help you.</p>
<!--MORE-->
<h1 id="projects">Projects</h1>
<p>As with other people who is new to swift, I will start with reading source code by authors who are exprienced. The following projects are with my comments to explain what it is doing.</p>
<ul>
<li>Recordings: It is for Swift 5 and iOS 13 and contains serveral examples under different app architectures, you may visit <a href="https://github.com/xavier-niu/recordings">Github</a> to see more details. Credits: <a href="https://objccn.io/">ObjC China</a></li>
</ul>
<h1 id="serialization-encoding-decoding">Serialization: Encoding &amp; Decoding</h1>
<p>Although Apple Development Documentation is a great reference, it is not for the newbies. You may refer to <a href="http://res.niuxuewei.com/encoder_decoder_slides.pdf">this PDF</a> if you want to learn what is it and how it works.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Page 365 of 365: 我的2019]]></title>
        <id>https://www.nxw.name/post/page-365-of-365-wo-de-2019</id>
        <link href="https://www.nxw.name/post/page-365-of-365-wo-de-2019">
        </link>
        <updated>2020-01-01T15:50:41.000Z</updated>
        <summary type="html"><![CDATA[<p>就在昨天，趁我睡着的时候彻底和2019年道了别，在2020的开头也是时候回顾我的2019年了。对于这一年，算是真正的经历了几件大事，也慢慢开始触及我原来从来没有也未曾感兴趣的领域，甚至开始思考一些人生之类看似虚无缥缈的问题。这似乎就是别人所谓的成长，在我看来无非是对未来不确定因素的恐慌，一切似乎看得清又看不清。</p>
]]></summary>
        <content type="html"><![CDATA[<p>就在昨天，趁我睡着的时候彻底和2019年道了别，在2020的开头也是时候回顾我的2019年了。对于这一年，算是真正的经历了几件大事，也慢慢开始触及我原来从来没有也未曾感兴趣的领域，甚至开始思考一些人生之类看似虚无缥缈的问题。这似乎就是别人所谓的成长，在我看来无非是对未来不确定因素的恐慌，一切似乎看得清又看不清。</p>
<!-- more -->
<h1 id="毕业">毕业</h1>
<p>上学应该会霸占每一位中国青少年极多的少年时光，我也不例外。相比于初中高中，在大学似乎终于有机会放飞自我，做我真正热爱的事情。也从大学之后，真正的感受到了什么是时光如流水，这4年过的太快，快到让人难以置信。</p>
<p>回头想来也算没荒度人生，我担任过学工的站长，说来也奇怪，在我任站长的一点经历了很多的第一次，第一次举办线上考试，在新生入学那几天我们开发的系统为近1万名新生提供服务，第一次组织易班，第一次举办开学典礼发言人遴选，第一次数字化十佳辅导员投票系统，直到最后我们还得到一间宽敞的、崭新的办公室，虽然装修好了之后就换届了，但这也算是学校领导对我们近一年工作的肯定；也以第一作者身份发表过论文，在与导师一封封邮件中反复修改，尽管四处被拒，但在大三行将结束的那个期末传来了好消息；也拿过国家奖学金，是我人生中第一次因为学习而获得如此巨大的奖励。</p>
<p>我尤其庆幸在大学中遇到了那么多优秀的学长学姐、导师、指导教师、同学、舍友，但是也带着很多遗憾我准备离开校园。在大学的最后一年中，我匆匆忙忙的完成了毕业设计，参加了毕业答辩，在无比炎热的夏天拍了毕业照片。直到真正要走的那一天，我看到图书馆上悬挂的“欢送2019届毕业生”的横幅，我才真正意识到明天的我就与大学彻底无关了，从今往后那个24号楼229宿舍会永久停业，那个我待了三年的学六306也将会充满着陌生的新面孔，对于母校终究成了一名过客。</p>
<h1 id="考研">考研</h1>
<p>在我以前看来，考研算得上是世界中最无趣的事情之一。但是当我真正站在人生交叉口上，真正面对未来诸多不确定时，我开始逐渐拥抱考研。2019年的近8个月中我完全为考研做着准备，甚至最后三个月我几乎连小区院子也没出。在准备的过程中，我仍无法认同所谓的应试教育，尤其是最后一个月看到各式各样的教育机构推出的所谓的“冲刺班”、“救命班”，看到那些所谓的教师熟练的讲述如何不看懂原文就能蒙对之类的内容时，更加深了我对应试教育以及购买这些课程的学生的鄙夷，但是这并不妨碍我在准备考研这段时间中我的收获。</p>
<p>首先，我对数学之类的学科有了全新的认识。在此之前，我认为对数学感兴趣的人都是不可理喻之人，着实无法理解在一行行生硬的定理中该如何激发对这门学科的兴趣。令我大为改观的是张宇老师，一位非常优秀的考研数学老师，他将数学史、应用与生硬的定理和谐的融合为一体。其实那些生硬的定律大都源自于一件甚至可能天天在我们身边发生的事，那些数学大家也是从无知逐渐一步步迈向真理，比如牛顿这一辈子可能都没搞明白微积分的真谛。数学其实本身没有那么枯燥，只是从小到大我们一直接受的应试教育完全抹除了它们的乐趣，而只是生硬的做题、背公式、改错题。</p>
<p>其次，我重新深刻的学习了CS的基础：数据结构、计算机组成原理、操作系统和计算机网络。直到学完的那刻才能真正的了解这些基础的重要性。原来的我也不过只是个CURD Boy(aka API Boy)，天天抱着文档调接口，当然我承认这样确实容易做出能用的产品从而获得巨大的成就感，但是我未曾站在机器的立场想过内部的原理。虽然不知道最终的成绩如何，但是无论如何借由考研的机会让我真的知道我的层次，对于我也算是受益良多。所以2020要立几个Flag：重新完整学习C++并读完Redis的源码。</p>
<p>然后就是健身，虽然考研并不是推动我健身的直接力量（胖才是）。原来也断断续续有去健身房，但是在学校毕竟需要做的事情比较多，课程太过分散，因此也就没怎么有坚持下来，反而在准备考研期间，几乎一天的时间都可以由我自由支配。还有就是将要进入第二个本命年的我，已经明显感觉到身体没以前那么抗造，隔三差五的某些地方就要疼你几天，这确实也是迫使我健身的第二大动力。不过经过半年左右的坚持锻炼（考研前3个月就专心复习，没有再去了），与之前对比确实有很明显的改观。因此考研刚结束我也就马不停蹄的动起来，希望明年的这个时候会有新的改变。</p>
<p>再就是我开始关注政治、经济方面的问题了。这主要源于考研的零碎休息时间刷YouTube，看到一个叫“观视频”的频道，里面的“又见”系列真的做的很不错，虽然有个别的“中吹”嫌疑，但是总体上我认为说的还算客观公正。这里面的教授每个人都有独到的观点，所以真的是强烈推荐。</p>
<p>最后考研带给我的改变就是沉心静气。现在是信息化时代，我们获取信息确实非常方便快捷。任何事情有得有失，信息化还带来了“碎片化”、“极端化”等问题。碎片化其实对我影响最大，以前在接触新东西之前我总是喜欢摸着石头过河，需要什么去网上查一查解决方案，当然这在入门期间确实大有益处，但是越往深处走就会发现这种方便快捷带来的是支离破碎、不成体系的知识，远不如沉心静气看下一本书收获来的多。在考研期间我耐着性子看完了好几本书、做完了好几本题之后，我突然发现原来看完一本书远没有想象中的那么痛苦。这也是我在前面flag里说“重新完整学习C++”，也就是下决心把《C++ Primer》这本书从头到尾看一遍。</p>
<p>BTW，考研期间还掌握了一大技能就是调制港式奶茶，毫不夸张的说味道很赞！XD</p>
<h1 id="2020">2020</h1>
<p>这篇文章写于考研成绩公布之前，心中多少还有些忐忑。正如前面所说未来不确定的因素太多，但谁的青春不迷茫呢？就在考研期间我在twitter上follow了一些中国的独立开发者，没错，在看过他们的推特后激起了我强烈的兴趣。我时常在想如果我发布一款属于自己的产品那该有多好。因此刚考完研，我就已经开始构思我的产品啦！希望在2020年能够发布第一版的demo，为成为freelancer迈出第一步。</p>
<h1 id="goodbye-9012">Goodbye, 9012</h1>
<p>最后的最后还想记录一下在9012年我觉得很不错的一些APP：</p>
<ul>
<li>Surge: 一款几乎完美的网络调试工具，开发者是Yachen Liu</li>
<li>Elpass: 2019年12月发布的一款密码管理工具，开发者是Yachen Liu</li>
<li>Spotify: 今年从QQ音乐转移到了Spotify，去掉了那些花里胡哨的社交功能让听音乐变得更纯粹</li>
<li>Telegram: 一款使用体验完美碾压于微信的聊天工具</li>
</ul>
<p>那么9012再见，2020你好。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git Usage]]></title>
        <id>https://www.nxw.name/post/git-usage</id>
        <link href="https://www.nxw.name/post/git-usage">
        </link>
        <updated>2019-11-16T02:08:42.000Z</updated>
        <summary type="html"><![CDATA[<p>Git is an awesome tool for version control. I used to some convenient GUI applications to manage git repository, and  ignored how it works and how to do it by command line. So in this article I will record some useful git commands that I used in development.</p>
]]></summary>
        <content type="html"><![CDATA[<p>Git is an awesome tool for version control. I used to some convenient GUI applications to manage git repository, and  ignored how it works and how to do it by command line. So in this article I will record some useful git commands that I used in development.</p>
<!--MORE-->
<h1 id="initialization">Initialization</h1>
<p>Initialize a local git repository</p>
<pre><code class="language-bash">git init
# recommand the way using ssh
git remote add origin ssh@xxxx
</code></pre>
<p>Push to remote repository</p>
<pre><code class="language-bash">git add .
git commit -a
git push origin master
</code></pre>
<p>Pull from remote repository</p>
<pre><code class="language-bash">git pull origin master
</code></pre>
<p>List the available remote repositories</p>
<pre><code class="language-bash">git remote -v
</code></pre>
<h1 id="branch">Branch</h1>
<p>Create</p>
<pre><code class="language-bash"># create a branch named &quot;branch1&quot;
git checkout -b branch1
</code></pre>
<p>Checkout (from local)</p>
<pre><code class="language-bash">git checkout master
</code></pre>
<p>Checkout (from remote to local)</p>
<pre><code class="language-bash">git checkout -b branch1 origin/branch1
</code></pre>
<p>Merge</p>
<pre><code class="language-bash"># assume you are in master branch and want to merge the code from hotfix
git merge hotfix
</code></pre>
<p>Rename</p>
<pre><code class="language-bash"># rename
git branch -m old-name new-name
# Delete the old-name remote branch and push the new-name local branch.
git push origin :old-name new-name
# Reset the upstream branch for the new-name local branch.
git push origin -u new-name
</code></pre>
<p>Delete local Branch</p>
<pre><code class="language-bash">git branch -d branch_name
# force delete
git branch -D branch_name
</code></pre>
<p>Delete remote branch (remote name: origin, remote branch: branch1)</p>
<pre><code class="language-bash">git push origin --delete branch1
</code></pre>
<h1 id="tag">Tag</h1>
<p>Create</p>
<pre><code class="language-bash"># add tag(e.g. v1.0) for current branch
git tag v1.0

# add tag with commit id(e.g. 039bf8b)
git tag v1.0 039bf8b

# add tag with extra message
git tag -a v1.0 -m &quot;version 1.0&quot;
</code></pre>
<p>View</p>
<pre><code class="language-bash"># view local tags
git tag

# view remote tags
git ls-remote --tags
</code></pre>
<p>Share the Tags</p>
<pre><code class="language-bash"># push a specific tag
git push origin v1.0

# push all local tags for one time
git push origin --tags
</code></pre>
<p>Switch</p>
<pre><code class="language-bash">git checkout v1.0
</code></pre>
<p>Delete remote tag(e.g. v1.0)</p>
<pre><code>git push -d origin v1.0
</code></pre>
<h1 id="fix-untracked-files">Fix untracked files</h1>
<p>For example, although you added some files into .gitignore, those are still tracked by git. The solution of the problem shown in below:</p>
<pre><code class="language-bash">git rm -r --cached .
git add .
git commit -m &quot;fixed untracked files&quot;
</code></pre>
<h1 id="how-to-undo-the-most-recent-commits">How to undo the most recent commits</h1>
<p>The more details could be found in <a href="https://stackoverflow.com/questions/927358/how-do-i-undo-the-most-recent-commits-in-git?page=1&amp;tab=votes#tab-top">StackoverFlow</a>.</p>
<pre><code class="language-bash"># your files will not lose, even index not too
# you can simply recommit again
git reset --soft HEAD~
git commit -a -m &quot;recommit&quot;

# reset with &quot;--hard&quot; would switchs the previous state entirely
# that means this not leaves your files and index both
git reset --hear HEAD~
</code></pre>
<h1 id="resolve-a-merge-conflict-using-the-command-line">Resolve a merge conflict using the command line</h1>
<p>The more details could be found in <a href="https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/">Github Documents</a>.</p>
<pre><code class="language-bash">git status
# &gt;&gt;&gt; OUTPUTS OF git status &lt;&lt;&lt;
# On branch master
# You have unmerged paths.
#   (fix conflicts and run &quot;git commit&quot;)
#   (use &quot;git merge --abort&quot; to abort the merge)
#
# Changes to be committed:
#
#         new file:   socket_learning/class3/__init__.py
#         new file:   socket_learning/class3/db/Message.txt
#         new file:   socket_learning/class3/db/User.txt
#         new file:   socket_learning/class3/models/message.py
#         new file:   socket_learning/class3/models/user.py
#
# Unmerged paths:
#   (use &quot;git add/rm &lt;file&gt;...&quot; as appropriate to mark resolution)
#
#         deleted by us:   socket_learning/class3/models/__init__.py
#         added by us:     socket_learning/server_impl/models/__init__.py
#         both modified:   socket_learning/server_impl/routes.py
# 
# Untracked files:
#   (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
#
#         socket_learning/__pycache__/
#         socket_learning/server_impl/__pycache__/
</code></pre>
<p><code>delete by us</code> and <code>added by us</code> can be added or deleted simply using the following command.</p>
<pre><code class="language-bash">git add &lt;file&gt;
git rm &lt;file&gt;
</code></pre>
<p><code>both modified</code> should manually merge using the text editor, like Vim or Atom. In these case, the conflict of <code>routes.py</code> is showing as below</p>
<pre><code class="language-python">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:socket_learning/server_impl/routes.py
from socket_learning.server_impl.models.message import Message
from socket_learning.server_impl.models.user import User
from socket_learning.server_impl.utils import log
=======
from socket_learning.class3.models.message import Message
from socket_learning.class3.models.user import User
from socket_learning.class3.utils import log
&gt;&gt;&gt;&gt;&gt;&gt;&gt; d8a8b9b8ad0e55b7216520600ae1bf809b5b2aa7:socket_learning/class3/routes.py
</code></pre>
<p><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>,<code>=======</code> and<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> indicates the places where conflict occurred, you should determine what the contents is the right one and change it with text editor.</p>
<pre><code class="language-python"># handle the conflicts manually
from socket_learning.server_impl.models.message import Message
from socket_learning.server_impl.models.user import User
from socket_learning.server_impl.utils import log
</code></pre>
<p>Save it and recommit them.</p>
<pre><code class="language-bash">git add .
git commit -a -m &quot;Merge branch 'master' of github.com:xavier-niu/python-playground&quot;
</code></pre>
<h1 id="remove-all-history-commits">Remove all history commits</h1>
<p>Checkout</p>
<pre><code class="language-bash"># the core use for &quot;git checkout --orphan&quot; is to reach 
# a &quot;git init&quot;-like situation on a non-new repository
git checkout --orphan latest_branch
</code></pre>
<p>Add all the files</p>
<pre><code class="language-bash">git add -A
</code></pre>
<p>Commit the changes</p>
<pre><code class="language-bash">git commit -am &quot;commit message&quot;
</code></pre>
<p>Delete the master branch (or what branch you want to clean)</p>
<pre><code class="language-bash">git branch -D master
</code></pre>
<p>Rename the current branch to master</p>
<pre><code class="language-bash">git branch -m master
</code></pre>
<p>Finally, force update your repository</p>
<pre><code class="language-bash">git push -f origin master
</code></pre>
<h1 id="integrate-commit-and-push-into-one-command">Integrate commit and push into one command</h1>
<p>This not supports by the build-in git command. But we can add a customized function into <code>.bash_profile</code>(for mac) to implement it.</p>
<pre><code class="language-bash"># lazygit for using commit and push in one command
# usage: lazygit &quot;commit msg&quot;
function lazygit() {
	git add .
	git commit -am &quot;$1&quot;
	git push
}
</code></pre>
<h1 id="restore-the-deleted-file">Restore the deleted file</h1>
<p>Assume that <code>test.txt</code> is the file you want to restore. First of all, find the last commit that affected the given path.</p>
<pre><code class="language-bash">git rev-list -n 1 HEAD -- test.txt
# outputs: 145107deebdbbad4ce0824b0dbb6f648b5515de7
</code></pre>
<p>The outputs are the id of the last commit. Checkout the version at the commit before, using the caret symbol.</p>
<pre><code class="language-bash">git checkout 145107deebdbbad4ce0824b0dbb6f648b5515de7^ -- text.txt
</code></pre>
<p>Or in one command</p>
<pre><code class="language-bash">git checkout $(get rev-list -n 1 HEAD -- text.txt)^ -- text.txt
</code></pre>
<h1 id="refuse-to-merge-unrelated-histories">Refuse to Merge Unrelated Histories</h1>
<p>Git reports an error when pulling from remote source.</p>
<pre><code>XavierNius-iMac:lucius-dev xavierniu$ git pull origin master
From github.com:xavier-niu/docker-lucius
 * branch            master     -&gt; FETCH_HEAD
fatal: refusing to merge unrelated histories
</code></pre>
<p>The following command with <code>--allow-unrelated-histories</code> is work.</p>
<pre><code class="language-bash">git pull origin master --allow-unrelated-histories
</code></pre>
<h1 id="git-clone-with-specific-port">Git Clone with Specific Port</h1>
<p>The git clone command with default port is</p>
<pre><code class="language-bash">git clone git@localhost:root/lucius.git
</code></pre>
<p>Assume that the port is 1923, the command is switch to</p>
<pre><code class="language-bash">git clone ssh://git@@localhost:1923/root/lucius.git
</code></pre>
<p>What we added:</p>
<ul>
<li>ssh protocol at the beginning of address</li>
<li>the port you specified behind the colon</li>
</ul>
<h1 id="move-files-when-checkout-a-new-branch-without-commit-or-merge">Move Files When Checkout a New Branch without Commit or Merge</h1>
<p>Sometimes, I often forget to checkout a new branch when composing a new module. Therefore, I don't want to commit it, neither want to merge it, but only would like to save current status and change the branch in that I haven't reached the milestone. To achieve it, I recommend to use <code>stash</code> command.</p>
<pre><code class="language-bash"># step 1
git stash
# step 2: checkout
git checkout new-branch
# step 3: restore current status
git stash pop
</code></pre>
<h1 id="use-git-over-a-proxy">Use Git over a Proxy</h1>
<p>Assume that there is a proxy like <code>127.0.0.1:1080</code>, both http and ssh proxy should be configed to ensure we can access the remote resources through any ways, like ssh protocol.</p>
<pre><code class="language-bash"># git http proxy
git config --global http.proxy socks5://127.0.0.1:1080
</code></pre>
<p>Add the following lines into <code>~/.ssh/config</code>, this method is passed on the macOS, other OS I haven't test.</p>
<pre><code>Host github.com
    ProxyCommand          nc -X connect -x 127.0.0.1:1081 %h %p
    ServerAliveInterval   10m
</code></pre>
<p>BTW, in the git http proxy config, you should use socks proxy with the &quot;socks5://&quot; prefix, on the contrary, in the ssh config, you should use http proxy.</p>
<hr>
<h1 id="update-logs">Update Logs</h1>
<p>This post will be updated continuously with my development. There are the logs to better know when I updated those contents:</p>
<ul>
<li>January 20, 2019: <code>init</code> move all contents from Notion to my blog</li>
<li>January 21, 2019: <code>add</code> remove all history commits</li>
<li>January 22, 2019:
<ul>
<li><code>add</code> branch &gt; delete remote branch</li>
<li><code>update</code> tag &gt; create</li>
<li><code>add</code> tag &gt; delete remote tag</li>
<li><code>update</code> tag &gt; share the tags</li>
<li><code>update</code> tag &gt; view</li>
</ul>
</li>
<li>January 27, 2019: <code>add</code> integrate commit and push into one command</li>
<li>February 3, 2019: <code>add</code> restore the deleted file</li>
<li>February 27, 2019: <code>add</code> refuse to merge unrelated histories</li>
<li>March 8, 2019: <code>add</code> git clone with specific port</li>
<li>March 17, 2019: <code>add</code> move files ehen checkout a new branch without commit or merge</li>
<li>April 4, 2019: <code>add</code> use git over a proxy</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Custom Actions of Launchbar]]></title>
        <id>https://www.nxw.name/post/custom-actions-of-launchbar</id>
        <link href="https://www.nxw.name/post/custom-actions-of-launchbar">
        </link>
        <updated>2019-10-18T16:10:56.000Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://www.obdev.at/products/launchbar/index.html">Launchbar</a> is a tool aimed for quick launch. Action, one of the function of Launchbar for productivity improvement in programming way, could runs tons of types of script to implement automation.</p>
]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.obdev.at/products/launchbar/index.html">Launchbar</a> is a tool aimed for quick launch. Action, one of the function of Launchbar for productivity improvement in programming way, could runs tons of types of script to implement automation.</p>
<!--MORE-->
<p>For more usage of Launchbar, you could check <a href="https://sspai.com/post/42907">this post</a> (🇨🇳Chinese). And here I gonna share some of the Actions I am using. Hope this post could help you.</p>
<h1 id="requirement-installation">Requirement &amp; Installation</h1>
<p>Requirement:</p>
<ul>
<li>Python (for mac user python will be installed as default, so you can ignore it in case you are not familiar with)</li>
<li>Launchbar</li>
</ul>
<p>How To Install:</p>
<p>Firstly, download the actions you want to install on your mac from <a href="https://github.com/xavier-niu/pub/tree/master/launchbar">Github</a>. And you will get a file with &quot;.ibaction&quot; extention. Just double click and install. Then, open &quot;Launchbar&quot; and enter &quot;AE&quot; to go to &quot;Action Editor&quot; in which you could find all actions you have installed.<br>
<img src="http://res.niuxuewei.com/2019-10-18-163444.png" alt="" loading="lazy"><br>
<img src="http://res.niuxuewei.com/2019-10-18-163506.png" alt="" loading="lazy"></p>
<h1 id="google-translate">Google Translate</h1>
<p>Google Translate, GOT in short, is super handy with a feature, called Instant Send, that allows Launchbar get what select by your cursor. In behalf of accessing service Google Translate more quicker, I highly recommend to open &quot;Instant Seed&quot;. You should press <code>Command + ,</code> and go to &quot;Shortcuts&quot; tab on the top of Preferences window. Switch the option of Instant Seed from Off to any keymap you like. In my opinion, &quot;Double fn&quot; is the best and naturaliest way.</p>
<figure data-type="image" tabindex="1"><img src="http://res.niuxuewei.com/2019-10-18-164637.png" alt="Shortcuts tab" loading="lazy"></figure>
<p>Now you can select a sentence you want to translate and press &quot;Double fn&quot; to active Instand Seed. The sentence are going to the input of launchbar and keep entering &quot;GOT&quot;, as a result you will get the translation from Google immediately.</p>
<figure data-type="image" tabindex="2"><img src="http://res.niuxuewei.com/2019-10-18-2019-10-19%2000.58.29.gif" alt="" loading="lazy"></figure>
<p>BTW, you can edit the script for more language support if you are familiar with Python. So feel free to leave a message and I will give you response as soon as possible.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Success] Hackintosh on Gigabyte Z370N WiFi with i5-8500]]></title>
        <id>https://www.nxw.name/post/success-hackintosh-on-gigabyte-z370n-wifi-with-i5-8500</id>
        <link href="https://www.nxw.name/post/success-hackintosh-on-gigabyte-z370n-wifi-with-i5-8500">
        </link>
        <updated>2019-10-18T15:20:14.000Z</updated>
        <summary type="html"><![CDATA[<p>I'm new to Hackintosh. When installed it on my comp, I almost got stuck at anywhere except post-installation.</p>
]]></summary>
        <content type="html"><![CDATA[<p>I'm new to Hackintosh. When installed it on my comp, I almost got stuck at anywhere except post-installation.</p>
<!--MORE-->
<p>Firstly, if you hang on &quot;Installing Bootloader&quot; with Unibeast 9.0.0, please try to reinstall your macOS, which you use Unibeast, after backup with Time Machine. Besides, I suggest when you want to build yourself at very first time <strong>DO NOT</strong> buy XFX video card, which I took about 1 week to handle an error &quot;attempting system restart&quot;, although it appears at Tony's buyer guide.</p>
<p>Update Log:</p>
<ul>
<li>Oct 15, 2019: support macOS Catalina</li>
<li>Oct 16, 2019: update stuffs related to bluetooth for macOS Catalina</li>
<li>Oct 17, 2019: fix system panic after sleeping after updated to 10.15(19A602)</li>
<li>Oct 30, 2019: update for macOS 10.15.1</li>
<li>Dec 19, 2019: [WARNING] updating to 10.15.2 should be carefully, a process named &quot;com.apple.parsec-fbf.flush&quot; which is running and keeping active in background until power off can lead your Hackintosh can't sleep properly. To get more info and a temporary solution, you may refer to <a href="https://www.tonymacx86.com/threads/process-com-apple-parsec-fbf-flush-on-catalina-10-15-2-prevents-system-from-sleeping-automatically.288951/">this post on tonymacx86</a>.</li>
<li>Jan 1, 2020: replace BCM94352Z with BCM94360CS2, a network card is natively supported by Apple, hence, all info related to wifi and bluetooth is removed.</li>
</ul>
<h1 id="hardware-summary">Hardware  Summary</h1>
<ul>
<li>MoBo: Gigabyte Z370N WiFi (M-ITX)</li>
<li>CPU: Intel Core i5-8500</li>
<li>Memory: Corsair Vengerance LPX DDR4 16G 3000MHz x2</li>
<li>Graphics Card: Sapphire RX 580 Pulse 8GB</li>
<li>Drives: Samsung EVO850 500G</li>
<li>Wireless Network Card: BCM94360CS2 (NGFF + M.2)</li>
<li>PSUs: CoolerMaster MWE GOLD 650W</li>
<li>CPU Cooler: CoolMaster T400i</li>
<li>Case: Antec Cube - Designed By Razer</li>
</ul>
<figure data-type="image" tabindex="1"><img src="http://res.niuxuewei.com/2018-12-29-IMG_1249.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="http://res.niuxuewei.com/2018-12-29-085816.png" alt="" loading="lazy"></figure>
<h1 id="bios-options">BIOS Options</h1>
<p>As for BIOS options, I fellow with @CaseySJ's guide at <a href="https://www.tonymacx86.com/threads/success-ongoing-status-of-designare-z390-with-i7-9700k.266065/page-29#post-1880116">here</a>. There are huge differences (at least in the name of options) between the motherboards, you should refer to other tutorials if your motherboard not from Gigabyte.</p>
<ul>
<li>M.I.T &gt; Extreme Memory Profile (X.M.P.) &gt; Profile 1 <s>(The problem of usb devices unexpected disconnection after sleeping may take place if opt-in Profile 1, in turn you can have higher memory frequency that  could pass over 2133MHz.)</s></li>
<li>BIOS &gt; Windows 8/10 Features &gt; Windows 8/10 (cuz there is not the option of &quot;Other OS&quot;)</li>
<li>BIOS &gt; CSM Support &gt; Disabled</li>
<li>BIOS &gt; Secure Boot &gt; Disabled</li>
<li>Peripherals &gt; Intel Platform Trust Technology (PTT)  &gt; Disabled</li>
<li>Peripherals &gt; USB Configuration &gt; Legacy USB Support &gt; Enabled</li>
<li>Peripherals &gt; USB Configuration &gt; XHCI Hand-off &gt; Enabled</li>
<li>Peripherals &gt; Network Stack Configuration &gt; Network Stack &gt; Disabled</li>
<li>Chipset &gt; Vt-d &gt; Disabled</li>
<li>Chipset &gt; Internal Graphics &gt; Enabled</li>
<li>Chipset &gt; DVMT Pre-Alloc &gt; 64M</li>
<li>Chipset &gt; DVMT Total Gfx Mem &gt; 256M</li>
<li>Chipset &gt; Above 4G Decoding &gt; Enabled</li>
</ul>
<h1 id="post-installation">Post-Installation</h1>
<p>The method of kext installation and rebuilding kext cache: Copy the kexts you want to install into the folder (like /Library/Extensions, aka /L/E, or other locations). Then, download the <strong>Kext Utility</strong> that help you rebuild the kext cache and others from <a href="http://cvad-mac.narod.ru/index/0-4">here</a>.</p>
<p>I did following thing at the stage of post-installation:</p>
<ul>
<li>
<p>Multibeast: Install clover on the SSD of Hackintosh.</p>
</li>
<li>
<p>Config.plist: I applied this <a href="http://res.niuxuewei.com/config.plist">config</a> provided by @CaseySJ and works fine on my hackintosh.</p>
</li>
<li>
<p>USB 3.0: Download <a href="http://res.niuxuewei.com/SSDT-UIAC-GA-Z370N-WIFI.aml">SSDT</a> and copy it into <code>/EFI/ACPI/patched/</code></p>
</li>
<li>
<p>Kexts installed on my Hackintosh:</p>
<ul>
<li>AppleALC.kext (Audio)</li>
<li>FakeSMC.kext</li>
<li>Lilu.kext</li>
<li>USBInjectAll.kext (USB)</li>
<li>XHCI-unsupported.kext (USB)</li>
<li>WhateverGreen.kext (AMD Graphics Card) <em>(EDIT@Oct 30, 2019: For AMD users, please update WhateverGreen.kext to 1.3.4 or newer to support macOS 10.15.1, otherwise, blackscreen would happen when booting.)</em></li>
<li>IntelMausiEthernet.kext (Ethernet) <em>(EDIT@Oct 17, 2019: the old version may arise system panic after sleeping. To resolve it, you should clone project of the latest from <a href="https://github.com/Mieze/IntelMausiEthernet">this repo</a> and build it by yourself with Xcode, in the end copy &amp; paste it into <code>/L/E</code> folder.)</em></li>
</ul>
</li>
<li>
<p>Enable HiDPI for 2K resolution display: see <a href="https://github.com/xzhih/one-key-hidpi">this repo</a></p>
</li>
<li>
<p>Previews, a built-in app on macOS, cannot previews jpg files by pressing space functionally: As mentioned in Github of NoVPAjpeg, the latest Lilu could fix it with additional boot arguments.</p>
</li>
</ul>
<h1 id="summary">Summary</h1>
<p>What works:</p>
<ul>
<li>audio</li>
<li>graphics card</li>
<li>shutdown / restart / sleep</li>
<li>WiFi</li>
<li>bluetooth</li>
<li>airdrop</li>
<li>handoff</li>
<li>unlock with Apple Watch</li>
</ul>
<p>That's all. Thanks for everyone who helped me build my first Hackintosh at Tonymacx86, especially for @CaseySJ's generous and patient help. I am writing this post for  those who has similar config and installs Hackintosh in their first attempt, hopefully it can help you.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[利用Aria2批量下载中国大学MOOC(慕课)(iCourse163.org)的视频]]></title>
        <id>https://www.nxw.name/post/li-yong-aria2-pi-liang-xia-zai-zhong-guo-da-xue-moocmu-ke-icourse163orgde-shi-pin</id>
        <link href="https://www.nxw.name/post/li-yong-aria2-pi-liang-xia-zai-zhong-guo-da-xue-moocmu-ke-icourse163orgde-shi-pin">
        </link>
        <updated>2019-10-18T13:27:40.000Z</updated>
        <summary type="html"><![CDATA[<p>最近在看Mooc网课的一些课程，但是经常会遇到已经结课无法查看的视频，而且目前由于iCourse163使用了HLS技术来播放视频，使得通过TamperMonkey(油猴脚本)的方式下载视频更加困难。因此我花了一个下午左右的时间，找到了一个批量下载iCourse163视频的方式。</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近在看Mooc网课的一些课程，但是经常会遇到已经结课无法查看的视频，而且目前由于iCourse163使用了HLS技术来播放视频，使得通过TamperMonkey(油猴脚本)的方式下载视频更加困难。因此我花了一个下午左右的时间，找到了一个批量下载iCourse163视频的方式。</p>
<!-- MORE -->
<p>在使用之前需要注意，这篇教程理论上在任何系统中都可以运行，但是我仅在macOS下测试成功，不同系统之间可能存在着Bash命令差异。在动手之前需要准备以下几样东西：</p>
<ul>
<li>Python3</li>
<li>Aria2(<a href="https://www.jianshu.com/p/97efbb73a747">安装步骤</a>)</li>
</ul>
<p>使用步骤</p>
<ol>
<li>获取视频源地址，借助工具<a href="http://tools.antlm.com/">antlm</a></li>
<li>在右下角，点击批量下载以获取<code>.bat</code>文件</li>
<li>下载<a href="https://github.com/xavier-niu/pub/tree/master/python/aira2-icourse163-dl">bat2aria2.py</a>，修改<code>source</code>、<code>output</code>和<code>download_dir</code>后，使用<code>python3 bat2aria2.py</code>运行即可获得一个下载列表
<ul>
<li>source: 你刚才下载的bat文件地址</li>
<li>output: 你想要生成的文件地址，如<code>/Users/user/Download/aria2-download-list</code>，则运行完该命令后会自动生成一个<code>aria2-download-list</code>的文件</li>
<li>download_dir: 保存视频的地址</li>
</ul>
</li>
<li>运行<code>python3 bat2aria2.py</code>（或者<code>python bat2aria2.py</code>）</li>
<li>Enjoy it!</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac Terminal使用Shadowsocks连接网络]]></title>
        <id>https://www.nxw.name/post/mac-terminal-shi-yong-shadowsocks-lian-jie-wang-luo</id>
        <link href="https://www.nxw.name/post/mac-terminal-shi-yong-shadowsocks-lian-jie-wang-luo">
        </link>
        <updated>2019-10-18T13:27:22.000Z</updated>
        <summary type="html"><![CDATA[<p>最近需要在mac上使用homebrew安装软件，但是homebrew的软件都是在github上的，恰巧这几天校园网一直无法访问github，就从网上查找到了terminal使用代理的方式：</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近需要在mac上使用homebrew安装软件，但是homebrew的软件都是在github上的，恰巧这几天校园网一直无法访问github，就从网上查找到了terminal使用代理的方式：</p>
<!-- MORE -->
<ol>
<li>
<p>在mac上的shadowsocks的设置：</p>
 <img src="http://res.niuxuewei.com/2018-04-29-022952.png" height="300px">
</li>
<li>
<p>开启Terminal输入：</p>
<pre><code class="language-bash"># 一般端口为1080 我的ss的设置是1086
export http_proxy=socks5://127.0.0.1:1086
export https_proxy=socks5://127.0.0.1:1086
# 或者
export ALL_PROXY=socks5://127.0.0.1:1086
</code></pre>
</li>
<li>
<p>Enjoy!XD</p>
</li>
</ol>
<p>[EDIT@Oct 15, 2019] 其实核心在于找到本地代理的端口（地址一般是127.0.0.1），因此在其余的软件，诸如Surge、Clash、ShadowsocksR(SSR)，都是差不多的原理。不过使用Surge的话有更容易的快捷键，点击Surge在菜单栏的图标后按住&quot;Command + C&quot;即可快捷复制上述代码。</p>
<p>需要注意的是</p>
<ul>
<li>
<p>这个只对当前terminal窗口有效</p>
</li>
<li>
<p>ping命令无法作为有效的检查工具，因为ping命令运行于网络层，而代理是在运输层之上的，我们可以用<code>curl</code>命令检测代理是否可用</p>
<pre><code class="language-bash">curl -i https://www.google.com
</code></pre>
</li>
</ul>
<figure data-type="image" tabindex="1"><img src="http://res.niuxuewei.com/2018-04-29-024410.png" alt="对比图" loading="lazy"></figure>
<p>为了更加方便，我们可以通过别名(alias)在~~~/.bashrc~~文件中设置别名来快速开启或关闭代理（注意在macOS Catalina及以上默认Bash改为了ZSH，因此设置文件是<code>~/.zshrc</code>，其余发行版需根据实际情况设置）</p>
<pre><code class="language-bash">vi ~/.bash_profile	# 编辑配置文件
alias setproxy=&quot;export ALL_PROXY=socks5://127.0.0.1:1086&quot;
alias unsetproxy=&quot;unset ALL_PROXY&quot;
:wq保存后
source ~/.bash_profile	# 立即生效
setproxy	# 开启代理
unsetproxy	# 关闭代理 
</code></pre>
<h1 id="references">References</h1>
<ul>
<li><a href="https://www.noxxxx.com/mac-%E4%B8%8B%E7%BB%88%E7%AB%AF%E8%B5%B0-ss-%E4%BB%A3%E7%90%86.html">#1 Mac 下终端走 ss代理</a></li>
<li><a href="http://gaocegege.com/Blog/%E9%9A%8F%E7%AC%94/shadowsocks-with-terminal">#2 如何在OS X 10.11的Terminal中使用shadowsocks</a></li>
<li><a href="https://www.jianshu.com/p/30ffeff2ce53">#3 MAC下终端走代理的几种方法</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting A Static IP on VirtualBox for Ubuntu]]></title>
        <id>https://www.nxw.name/post/setting-a-static-ip-on-virtualbox-for-ubuntu</id>
        <link href="https://www.nxw.name/post/setting-a-static-ip-on-virtualbox-for-ubuntu">
        </link>
        <updated>2019-10-18T13:27:12.000Z</updated>
        <summary type="html"><![CDATA[<p>Recently, I need to install a virtual machine on VirtualBox on my mac and assign it with a static ip. But I encountered several problems worthing to record it.</p>
]]></summary>
        <content type="html"><![CDATA[<p>Recently, I need to install a virtual machine on VirtualBox on my mac and assign it with a static ip. But I encountered several problems worthing to record it.</p>
<!--MORE-->
<p>The first step is install VirtualBox and download the iso of latest Ubuntu. These steps, too simple to waste time, are skipped. The following part will describe the details one-by-one.</p>
<p>Step 1. Create a Host-only Network on VirtualBox</p>
<ul>
<li>Click &quot;File &gt; Host Network Manager&quot;</li>
<li>Click &quot;Create&quot; in the upper left corner</li>
</ul>
<p>DHCP option I prefer do not modify, although it doesn't matter with setting static ip. In this way, you can get a new net called &quot;vboxnet0&quot;.</p>
<figure data-type="image" tabindex="1"><img src="http://res.niuxuewei.com/2019-03-10-132337.png" alt="image-20190310212335100" loading="lazy"></figure>
<p>Step 2. Config your Virtual Machine</p>
<ul>
<li>Click right on your VM and select &quot;Settings&quot; option</li>
<li>Click &quot;Network &gt; Adapter 2&quot; and alter these options as the below image</li>
</ul>
<figure data-type="image" tabindex="2"><img src="http://res.niuxuewei.com/2019-03-10-132610.png" alt="image-20190310212609408" loading="lazy"></figure>
<p>Step 3. Config the Network inside the VM</p>
<p>(OS: Ubuntu Server 18.04 LTS)Startup your VM, and insert the command</p>
<pre><code class="language-bash">ifconfig -a
</code></pre>
<p>It will output all Ethernets on your VM, your can find there is a different ethernet with no inet, netmask on the terminal. It is named &quot;end0s8&quot; in this case, but it can be a little difference between your case.  Then press the command</p>
<pre><code class="language-bash">sudo vim /etc/netplan/50-cloud-init.yaml
</code></pre>
<p>Append some lines into that file</p>
<pre><code class="language-yaml">networks: 
  ethernets: 
    enp0s3: 
      dhcp4: true
    # start here
    enp0s8: 
      # you can replace 101 between 1 and 254 arbitrarily
      # please note do not use the same ip in one subnet
      addresses: [192.168.56.101/24]
    # end
  version: 2
</code></pre>
<p>Save it and reboot. To verify, you can use &quot;ping 192.168.56.101&quot; command in terminal on the host. If the output is same like the below, congratulation, you done it.</p>
<figure data-type="image" tabindex="3"><img src="http://res.niuxuewei.com/2019-03-10-134344.png" alt="image-20190310214342885" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Design Pattern in Python]]></title>
        <id>https://www.nxw.name/post/design-pattern-in-python</id>
        <link href="https://www.nxw.name/post/design-pattern-in-python">
        </link>
        <updated>2019-10-18T13:26:08.000Z</updated>
        <summary type="html"><![CDATA[<p>Design Pattern, which help improve the structure of codes and read other source code faster, is a vital skill of development.</p>
]]></summary>
        <content type="html"><![CDATA[<p>Design Pattern, which help improve the structure of codes and read other source code faster, is a vital skill of development.</p>
<!--MORE-->
<h1 id="observer">Observer</h1>
<blockquote>
<p>Github: <a href="https://github.com/xavier-niu/python-playground/tree/design-pattern-observer-1.0">design-pattern-observer-1.0</a></p>
<p>Last Updated: Januray 23, 2019</p>
</blockquote>
<p>Observer, which can be called Publish/Subscribe Mode, Model/View Mode, Source/Listener<br>
Mode, Dependents Mode also, is a one-to-many relation. We abstract waster heater as an example of observer in<br>
<code>observer</code>.</p>
<p>In the <code>observer</code>, we can further rebuild the structure of code and extract the common parent classes. More details<br>
can be found at <code>observer_v2</code>. We can inherit the basic classes we created to implement a brand-new &quot;waster heater&quot;<br>
observers at <code>observer_v3</code>.</p>
<figure data-type="image" tabindex="1"><img src="http://res.niuxuewei.com/2019-01-23-Main.png" alt="UML of Observer Mode" loading="lazy"></figure>
<p>Some points should be considered:</p>
<ul>
<li>You should figure out who are observers and observable. For example, there is a textarea that should be observable.<br>
On the contrary, mouse and keyboard could be observer.</li>
<li>Observable sends the notification to all observers without filtering. Observers should determine by themselves<br>
whether subscribe the notifications from observable.</li>
<li>Observable should has three methods at least, add observer, remove observer and notify observer. Meanwhile,<br>
observers should has one method at least for processing when observable sent a notification.</li>
</ul>
<h1 id="adapter">Adapter</h1>
<p>The more details are wrote into the comment of <a href="https://github.com/xavier-niu/python-playground/blob/design-pattern-adapter-1.0/adapter.py">adapter.py</a>. Please read this file first. The definition of adapter pattern is convert the interface of a class into another interface clients expect. Adapter lets classes work together that can't otherwise because of incompatible interfaces. Adapter mode like HDMI to DVI adapter in our life. The intentions of adapter are:</p>
<ul>
<li>Interface conversion</li>
<li>Wrapping an existed class to a new class</li>
<li>Making an old module adapt to a new environment</li>
</ul>
<p>There are three mainly roles:</p>
<ul>
<li>Target(IHighPerson): the interface clients expect</li>
<li>Adaptee(ShortPerson): who you want to convert</li>
<li>Adapter(PersonWithHHS): the core member of adapter mode</li>
</ul>
<p>To sum up, adapter is not for the new system instead of large one that has lots of components and will add some new classes that not support by original.</p>
<h1 id="state">State</h1>
<p>[<a href="https://github.com/xavier-niu/python-playground/tree/design-pattern-state-1.0">Github</a>]Just think about water, which have three different states but the substance is same. In the <code>state</code>, we simulate the<br>
states of water, solid, liquid and gaseous, which change by the temperature. State pattern is the behavior and<br>
external properties become difference when the internal state(temperature in this example) changes.</p>
<figure data-type="image" tabindex="2"><img src="http://res.niuxuewei.com/2019-01-26-134443.jpg" alt="UML of water example" loading="lazy"></figure>
<p>The abstract state pattern model can be found at <code>state_v2</code>.</p>
<figure data-type="image" tabindex="3"><img src="http://res.niuxuewei.com/2019-01-26-142223.jpg" alt="UML of general model of the state pattern" loading="lazy"></figure>
<p><code>state_v3</code> is a version of <code>state</code> with the abstract model we created at <code>state_v2</code>. The outputs are same as <code>state</code>.<br>
Be aware that:</p>
<ul>
<li><code>state_info</code> in this example is pretty simple, but it may complex in the practice. If so, this variable can be<br>
wrapped into a class.</li>
<li>The state of context should be singleton.</li>
</ul>
<p>You can apply state pattern into your project, if:</p>
<ul>
<li>the behavior of a class depends on the state, and the state may be changed when program running.</li>
<li>your code has too much &quot;if&quot; statements, state mode helps enhance readability.</li>
</ul>
]]></content>
    </entry>
</feed>